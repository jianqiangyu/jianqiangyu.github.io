{"pages":[],"posts":[{"title":"开个好头","text":"","link":"/2021/03/30/%E5%BC%80%E4%B8%AA%E5%A5%BD%E5%A4%B4/"},{"title":"DNS协议","text":"[toc] 王昱#","link":"/2021/05/30/DNS%E5%8D%8F%E8%AE%AE/"},{"title":"HTTP缓存","text":"简介 响应头 响应头字段名 Cache-Control (HTTP/1.1) Last-Modified: ETag: Expires(HTTP1.0的产物): ETag相比Last-Modified的优点: 请求头 请求头字段名 If-Modified-Since If-None-Match cache-control 缓存流程 无缓存正常请求服务器流程 第一请求资源流程 非第一次请求资源流程 协商缓存流程 简介#HTTP有一套缓存机制来加快响应时间,提高网页响应速度. 一般会将一些静态资源缓存下来, 下次再次请求这个资源的时候, 在条件允许的情况直接使用缓存. ​ 响应头#有一些响应头的字段跟我们的缓存息息相关 ​ 响应头字段名#Cache-Control (HTTP/1.1)#描述:设置缓存策略 值:Cache-Control 可设置的策略: no-storage: 不允许缓存数据到本地 public: 允许用户/代理服务器缓存数据到本地 private: 只允许用户缓存数据到本地 max-age: 缓存的有效时间 no-cache: 协商缓存, 每次需要发请求询问缓存是否可用 ​ Last-Modified:#描述:资源的最后一次修改时间​ ETag:#描述:资源的唯一标识(根据文件内容计算出的摘要值)​ Expires(HTTP1.0的产物):#描述:缓存的响应的过期时间 (GMT时间格式)优先级小于cache-control, 指定了cache-control的情况下, Expires不生效 ETag相比Last-Modified的优点:# 如果内容修改后, 又回滚了, 这时候, 内容没有发生变化,但是Last-Modified却变化了, 本可以直接使用缓存,但还是像服务器请求了资源 Last-Modified只能精确到秒级别, 如果在获取到资源后的一秒内发生了更新, 那么在以后的请求中, 无法获得最新资源 ​ 请求头#有一些请求头的字段也跟我们的缓存息息相关 请求头字段名#If-Modified-Since#描述:与上一次请求的响应中的响应头字段Last-Modified对应 If-None-Match#描述:与上一次请求的响应中的响应头字段ETag对应 cache-control#描述:用来指定本次请求的缓存机制 缓存流程#无缓存正常请求服务器流程#​ 第一请求资源流程#​ 非第一次请求资源流程#​ 协商缓存流程#","link":"/2021/05/30/HTTP%E7%BC%93%E5%AD%98/"}],"tags":[{"name":"网络协议 HTTP 缓存","slug":"网络协议-HTTP-缓存","link":"/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-HTTP-%E7%BC%93%E5%AD%98/"}],"categories":[]}